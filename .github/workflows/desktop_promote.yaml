on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/cn_release
        id: cn-show
        with:
          key: ${{ secrets.CN_API_KEY }}
          raw: >-
            release show fastrepl/hyprnote ${{ inputs.version }} --channel nightly

      - run: |
          echo "Nightly release details: ${{ steps.cn-show.outputs.raw }}"

          mkdir -p assets
          cd assets

          > ../asset_info.txt

          echo '${{ steps.cn-show.outputs.raw }}' | jq -c '.assets[]' | while read -r asset; do
            asset_id=$(jq -r '.id' <<< "$asset")
            update_platform=$(jq -r '.updatePlatform' <<< "$asset")
            public_platform=$(jq -r '.publicPlatform' <<< "$asset")
            filename=$(jq -r '.filename' <<< "$asset")
            signature=$(jq -r '.signature' <<< "$asset")

            curl "https://cdn.crabnebula.app/asset/$asset_id" --output "$filename"

            if [ "$signature" != "null" ]; then
              echo "$signature" > "$filename.sig"
            fi

            echo "$filename,$update_platform,$public_platform" >> ../asset_info.txt
          done

          cd ..
          echo "downloaded=true" >> $GITHUB_OUTPUT

      - uses: ./.github/actions/cn_release
        with:
          key: ${{ secrets.CN_API_KEY }}
          raw: >-
            release draft fastrepl/hyprnote ${{ inputs.version }}

      - run: |
          cd assets
          while IFS=, read -r filename update_platform public_platform; do
            args=("release" "upload" "fastrepl/hyprnote" "${{ inputs.version }}" "--file" "$filename")

            if [ "$update_platform" != "null" ]; then
              args+=("--update-platform" "$update_platform")

              if [ -f "$filename.sig" ]; then
                args+=("--signature" "$filename.sig")
              fi
            fi

            if [ "$public_platform" != "null" ]; then
              args+=("--public-platform" "$public_platform")
            fi

            echo "Uploading $filename with command: ${args[*]}"
            ../cn "${args[@]}"
          done < ../asset_info.txt
        env:
          CN_API_KEY: ${{ secrets.CN_API_KEY }}

      - uses: ./.github/actions/cn_release
        with:
          key: ${{ secrets.CN_API_KEY }}
          raw: >-
            release publish fastrepl/hyprnote ${{ inputs.version }}
